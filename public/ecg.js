console.log("ecg.js was loaded");

// *** CanvasJS part ***
var limit = 100; // number of dataPoints visible at any point
// data
var dps = [];
var dataset = [
    9.779411554336547852e-01,9.264705777168273926e-01,6.813725233078002930e-01,2.450980395078659058e-01,1.544117629528045654e-01,1.911764740943908691e-01,1.519607901573181152e-01,8.578431606292724609e-02,5.882352963089942932e-02,4.901960864663124084e-02,4.411764815449714661e-02,6.127450987696647644e-02,6.617647409439086914e-02,6.127450987696647644e-02,4.901960864663124084e-02,7.352941483259201050e-02,6.127450987696647644e-02,6.127450987696647644e-02,6.617647409439086914e-02,6.862745434045791626e-02,9.558823704719543457e-02,7.598039507865905762e-02,9.313725680112838745e-02,1.053921580314636230e-01,1.151960790157318115e-01,1.029411777853965759e-01,1.176470592617988586e-01,1.250000000000000000e-01,1.421568691730499268e-01,1.274509876966476440e-01,1.519607901573181152e-01,1.446078419685363770e-01,1.642156839370727539e-01,1.446078419685363770e-01,1.593137234449386597e-01,1.519607901573181152e-01,1.544117629528045654e-01,1.421568691730499268e-01,1.519607901573181152e-01,1.519607901573181152e-01,1.470588296651840210e-01,1.323529481887817383e-01,1.274509876966476440e-01,1.348039209842681885e-01,1.372549086809158325e-01,1.127450987696647644e-01,1.078431382775306702e-01,1.053921580314636230e-01,1.078431382775306702e-01,9.803921729326248169e-02,9.313725680112838745e-02,1.029411777853965759e-01,1.004901975393295288e-01,1.053921580314636230e-01,1.029411777853965759e-01,1.176470592617988586e-01,1.053921580314636230e-01,1.225490197539329529e-01,1.274509876966476440e-01,1.421568691730499268e-01,1.470588296651840210e-01,1.446078419685363770e-01,1.740196049213409424e-01,2.303921580314636230e-01,2.377450913190841675e-01,2.475490123033523560e-01,2.303921580314636230e-01,2.254901975393295288e-01,1.985294073820114136e-01,1.764705926179885864e-01,1.323529481887817383e-01,1.250000000000000000e-01,1.176470592617988586e-01,1.225490197539329529e-01,1.127450987696647644e-01,1.299019604921340942e-01,1.151960790157318115e-01,8.333333581686019897e-02,0.000000000000000000e+00,6.617647409439086914e-02,3.063725531101226807e-01,6.127451062202453613e-01,8.602941036224365234e-01,1.000000000000000000e+00,9.583333134651184082e-01,7.450980544090270996e-01,3.039215803146362305e-01,1.642156839370727539e-01,2.058823555707931519e-01,1.642156839370727539e-01,1.029411777853965759e-01,9.558823704719543457e-02,9.068627655506134033e-02,1.004901975393295288e-01,9.558823704719543457e-02,9.803921729326248169e-02,9.313725680112838745e-02,9.803921729326248169e-02,9.558823704719543457e-02,1.127450987696647644e-01,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00
]
const grayColor = "#676767";
const tealColor = "#26B999";

var chart = new CanvasJS.Chart("chartContainer", {
    title :{
        text: "Electrocardiogram",
        fontWeight: "normal",
        fontFamily: "arial",
        fontColor: "white",
        padding: {
            top: 10,
            right: 10,
            bottom: 5,
            left: 10
          },
        margin: 20,
        backgroundColor: tealColor,
        cornerRadius: 4,
    },
    axisX:{
        title: "",
        titleFontWeight: "bold",
        labelFontColor: grayColor,
        lineColor: grayColor,
        //viewportMaximum: 150
    },
    axisY:{
        title: "Amplitude (mv)",
        titleFontWeight: "bold",
        titleFontColor: grayColor,
        labelFontColor: grayColor,
        lineColor: grayColor,
        suffix: " mv",
        includeZero: false,
        interval: 0.5,
        viewportMinimum: -1,
        viewportMaximum: 1,
        gridDashType: "dash",
        gridThickness: 1,
        gridColor: "#DDDDDD",
    },
    data: [{
        type: "line",
        lineColor: tealColor,
        markerType: "none",
        cursor: "pointer",
        //lineThickness: 1,
        dataPoints: dps
    }],
    animationEnabled: true,
});
var xVal = 0;
var yVal = 100;
var updateInterval = 1000;
count = 0;
//chart.render();

// *** MQTT part ***
// called when a message arrives
function onMessageArrived(message) {
    let topic = message.destinationName;
    //console.log("onMessageArrived:" + "[" + message.destinationName + "] " + message.payloadString);
    if (topic == "Taha/ecg") {
        let ecg = parseInt(message.payloadString);
        console.log(ecg);
        dps.push({
            x: count,
            y: ecg
        })
        count++;

        if (dps.length > limit) {
            dps.shift();
        }

        chart.render();
    }
}

//MQTTconnect(clientId);

function wait(ms) {
    return new Promise(resolve => {
        setTimeout(() => {
            resolve("resolved");
        }, ms)
    })
}

async function draw() {
    for (count = 0; count < dataset.length; count++) {
        await wait(50);
        dps.push({
            x: count,
            y: Math.sin(Math.PI * (count/25.0))
        })
    
        if (dps.length > limit) {
            dps.shift();
        }
    
        chart.render();
    }
}

draw();